type User 
  @model 
  @auth(rules: [{allow: public}]) {
  id: ID!
  userName: String!
  name: String!
  email: String!
  uuid: String
  biography: String
  profilePhoto: String
  color: String
  roomID: String
  pushNToken: String
  friends: [Friend] @hasMany(indexName: "byUser", fields: ["id"])
  posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  likes: [Like] @hasMany(indexName: "byUser", fields: ["id"])
}

type Post 
  @model 
  @auth(rules: [{allow: public}]) {
  id: ID! @index(name: "byUser", sortKeyFields: ["userID"]) 
  content: String!
  image: String
  userID: ID! 
  user: User @belongsTo(fields: ["userID"])
  likes: [Like] @hasMany(indexName: "byPost", fields: ["id"]) 
} 

type Like
  @model(queries: null) 
  @auth(rules: [{allow: public}]) {
  id: ID! @index(name: "byPost", sortKeyFields: ["postID", "userID"]) @index(name: "byUser", sortKeyFields: ["userID", "postID"])
  userID: ID!
  user: User! @belongsTo(fields: ["userID"]) 
  postID: ID!
  post: Post! @belongsTo(fields: ["postID"])
}

type Friend
  @model 
  @auth(rules: [{allow: public}]) {
  id: ID! @index(name: "byUser", sortKeyFields: ["friendID"]) 
  userID: ID! 
  friendID: ID!
  user: User @belongsTo(fields: ["friendID"])
} 